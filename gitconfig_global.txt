[core]
    preloadindex = true
    fscache = true
    eol = lf
    autocrlf = input # Always converts crlf to lf on commit
    safecrlf = true # Fail fast on EOL inconsistencies
    editor = code --wait
[commit]
    gpgsign = true
[gpg]
    program = "C:\\Program Files (x86)\\GnuPG\\bin\\gpg.exe"
[init]
    defaultBranch = main
[diff]
    ignoreSubmodules = dirty
    tool = vscode
[difftool "vscode"]
    cmd = code --wait --diff $LOCAL $REMOTE
[merge]
    tool = vscode
[mergetool "vscode"]
    cmd = code --wait $MERGED
[alias]
    # List branches sorted by last-modified
    b = "!git for-each-ref --sort='authordate' --color=auto --format='%(color:bold cyan)%(align:width=20)%(authordate:human)%(end)%(color:reset)%09%(color:bold magenta)%(objectname:short)%(color:reset) %(color: bold green)%(HEAD)%(color:reset)%(align:width=9,position=right)%(upstream:remotename)%(end):%(color:bold white)%(refname:lstrip=2)%(color:reset)' refs/heads"
    c = commit
    cam = !"git add -A && git commit -m"
    camend = commit --amend --reuse-message=HEAD
    # 1. fork project from https://github.com/other-org/some-repo to https://github.com/dbjorge/some-repo
    # 2. git clonefork other-org some-repo
    clonefork = "!git clone -o upstream https://github.com/$1/$2.git && cd $2 && git remote add dbjorge https://github.com/dbjorge/$2.git && :"
    co = checkout
    f = fetch -p
    fa = fetch -p --all
    lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit -n 10
    nub = "!git checkout -b $1 && :"
    pub = "!git push --set-upstream dbjorge HEAD && :"
    # eg, "git renamed-upstream master main"
    renamed-upstream = "!git branch -m $1 $2 && git fetch upstream && git branch -u upstream/$2 $2 && :"
    s = status -sb
    unstage = reset --